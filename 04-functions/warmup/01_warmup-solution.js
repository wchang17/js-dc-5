/*
Warm up

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

*/

// start things off with our fibonacci sequence with the first 2 values in it
let fibonacci = [1, 2]
let threshold = 10 // terms whose value is less than 10
// let threshold = 4000000 // terms whose value is less than 4 million

let i = 1 // create our counter for our loop

// while the last item in the array is less than our threshold
while ( fibonacci[ fibonacci.length - 1 ] < threshold ) {

  // push in the next number in the sequence and increment our counter
  let nextNumber = fibonacci[ i ] + fibonacci[ i - 1]
  console.log( nextNumber )
  fibonacci.push( nextNumber )
  ++i

}

// uncomment to see our fibonacci sequence
console.log( fibonacci.length, fibonacci )


// start with our total
let total = 0

// for every value in the fibonacci sequence ...
for (let i = 0; i <= fibonacci.length; i++) {
  // ... if the value is even ...
  if ( fibonacci[i] % 2 === 0 ) {
    // ... add it to the current total
    total += fibonacci[i]
  }
}

// finally, show us the total!
// console.log( total )
